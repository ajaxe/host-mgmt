// <auto-generated />
using System;
using HostingUserMgmt.Repository;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace HostingUserMgmt.Repository.Migrations
{
    [DbContext(typeof(HostingManagementDbContext))]
    [Migration("20200621024349_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("HostingUserMgmt.Domain.EntityModels.ApiCredential", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime?>("CreatedAtUtc")
                        .HasColumnName("created_at_utc")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("ModifiedAtUtc")
                        .HasColumnName("modified_at_utc")
                        .HasColumnType("timestamp without time zone");

                    b.Property<short>("Type")
                        .HasColumnName("type")
                        .HasColumnType("smallint");

                    b.Property<int>("UserId")
                        .HasColumnName("user_id")
                        .HasColumnType("integer");

                    b.Property<string>("UserSecret")
                        .HasColumnName("user_secret")
                        .HasColumnType("text");

                    b.Property<string>("Username")
                        .HasColumnName("username")
                        .HasColumnType("text");

                    b.HasKey("Id")
                        .HasName("pk_api_credentials");

                    b.HasIndex("UserId")
                        .HasName("ix_api_credentials_user_id");

                    b.HasIndex("Username")
                        .IsUnique()
                        .HasName("ix_api_credentials_username");

                    b.ToTable("api_credentials");
                });

            modelBuilder.Entity("HostingUserMgmt.Domain.EntityModels.Entitlement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime?>("CreatedAtUtc")
                        .HasColumnName("created_at_utc")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Description")
                        .HasColumnName("description")
                        .HasColumnType("text");

                    b.Property<DateTime?>("ModifiedAtUtc")
                        .HasColumnName("modified_at_utc")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Name")
                        .HasColumnName("name")
                        .HasColumnType("text");

                    b.HasKey("Id")
                        .HasName("pk_entitlements");

                    b.ToTable("entitlements");
                });

            modelBuilder.Entity("HostingUserMgmt.Domain.EntityModels.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime?>("CreatedAtUtc")
                        .HasColumnName("created_at_utc")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("ModifiedAtUtc")
                        .HasColumnName("modified_at_utc")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Name")
                        .HasColumnName("name")
                        .HasColumnType("text");

                    b.HasKey("Id")
                        .HasName("pk_roles");

                    b.ToTable("roles");
                });

            modelBuilder.Entity("HostingUserMgmt.Domain.EntityModels.RoleEntitlement", b =>
                {
                    b.Property<int>("RoleId")
                        .HasColumnName("role_id")
                        .HasColumnType("integer");

                    b.Property<int>("EntitlementId")
                        .HasColumnName("entitlement_id")
                        .HasColumnType("integer");

                    b.HasKey("RoleId", "EntitlementId")
                        .HasName("pk_role_entitlement");

                    b.HasIndex("EntitlementId")
                        .HasName("ix_role_entitlement_entitlement_id");

                    b.ToTable("role_entitlement");
                });

            modelBuilder.Entity("HostingUserMgmt.Domain.EntityModels.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime?>("CreatedAtUtc")
                        .HasColumnName("created_at_utc")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("EmailAddress")
                        .HasColumnName("email_address")
                        .HasColumnType("text");

                    b.Property<string>("ExternalId")
                        .HasColumnName("external_id")
                        .HasColumnType("text");

                    b.Property<DateTime?>("ModifiedAtUtc")
                        .HasColumnName("modified_at_utc")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Name")
                        .HasColumnName("name")
                        .HasColumnType("text");

                    b.HasKey("Id")
                        .HasName("pk_users");

                    b.HasIndex("ExternalId")
                        .HasName("ix_users_external_id");

                    b.ToTable("users");
                });

            modelBuilder.Entity("HostingUserMgmt.Domain.EntityModels.ApiCredential", b =>
                {
                    b.HasOne("HostingUserMgmt.Domain.EntityModels.User", "User")
                        .WithMany("Credentials")
                        .HasForeignKey("UserId")
                        .HasConstraintName("fk_api_credentials_users_user_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HostingUserMgmt.Domain.EntityModels.RoleEntitlement", b =>
                {
                    b.HasOne("HostingUserMgmt.Domain.EntityModels.Entitlement", "Entitlement")
                        .WithMany("Roles")
                        .HasForeignKey("EntitlementId")
                        .HasConstraintName("fk_role_entitlement_entitlements_entitlement_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HostingUserMgmt.Domain.EntityModels.Role", "Role")
                        .WithMany("Entitlements")
                        .HasForeignKey("RoleId")
                        .HasConstraintName("fk_role_entitlement_roles_role_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
